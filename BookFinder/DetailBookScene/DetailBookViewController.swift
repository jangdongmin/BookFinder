//
//  DetailBookViewController.swift
//  BookFinder
//
//  Created by Paul Jang on 2020/08/20.
//  Copyright (c) 2020 Paul Jang. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailBookDisplayLogic: class
{
    func displayBookInfo(viewModel: DetailBook.ViewModel)
}

class DetailBookViewController: UIViewController, DetailBookDisplayLogic
{
    @IBOutlet weak var bookDetailInfoTableView: BookDetailInfoTableView!
    @IBOutlet weak var bookImageView: UIImageView!
    
    var interactor: DetailBookBusinessLogic?
    var router: (NSObjectProtocol & DetailBookRoutingLogic & DetailBookDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = DetailBookInteractor()
        let presenter = DetailBookPresenter()
        let router = DetailBookRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        interactor?.setupBookInfoUI()
    }
    
    func displayBookInfo(viewModel: DetailBook.ViewModel)
    {
        bookImageView.sd_setImage(with: URL(string: viewModel.titleImage), placeholderImage: UIImage(named: "placeholder"))
        bookDetailInfoTableView.setData(bookData: viewModel.strArr)
    }
}
